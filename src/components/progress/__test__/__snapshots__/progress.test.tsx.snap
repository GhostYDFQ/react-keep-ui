// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test Progress component  should render bycount 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-bdnylx cAsKrJ"
      >
        <div
          class="sc-dlnjPT hxIdxV"
        >
          <div
            class="sc-gtssRu hKVEL"
          />
        </div>
        <div
          class="sc-hKFyIo hWQnzJ"
        >
          11%
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-bdnylx cAsKrJ"
    >
      <div
        class="sc-dlnjPT hxIdxV"
      >
        <div
          class="sc-gtssRu hKVEL"
        />
      </div>
      <div
        class="sc-hKFyIo hWQnzJ"
      >
        11%
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`test Progress component  should render bycount 2`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-bdnylx cAsKrJ"
      >
        <div
          class="sc-dlnjPT hxIdxV"
        >
          <div
            class="sc-gtssRu kURvOm"
          />
        </div>
        <div
          class="sc-hKFyIo hWQnzJ"
        >
          100%
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-bdnylx cAsKrJ"
    >
      <div
        class="sc-dlnjPT hxIdxV"
      >
        <div
          class="sc-gtssRu kURvOm"
        />
      </div>
      <div
        class="sc-hKFyIo hWQnzJ"
      >
        100%
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`test Progress component  should render bycount 3`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-bdnylx cAsKrJ"
      >
        <div
          class="sc-dlnjPT hxIdxV"
        >
          <div
            class="sc-gtssRu tZyoL"
          />
        </div>
        <div
          class="sc-hKFyIo hWQnzJ"
        >
          0%
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-bdnylx cAsKrJ"
    >
      <div
        class="sc-dlnjPT hxIdxV"
      >
        <div
          class="sc-gtssRu tZyoL"
        />
      </div>
      <div
        class="sc-hKFyIo hWQnzJ"
      >
        0%
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`test Progress component  should render bycount 4`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-eCApGN hJJZDV"
      >
        <svg
          height="100"
          style="transform: rotate(270deg);"
          viewBox="0 0 420 420"
          width="100"
        >
          <defs>
            <radialgradient
              cx="100%"
              cy="100%"
              id="linear"
              r="100%"
              spreadMethod="pad"
            >
              <stop
                offset="0%"
                stop-color="#FF4785"
              />
              <stop
                offset="100%"
                stop-color="#FFAE00"
              />
            </radialgradient>
          </defs>
          <circle
            cx="210"
            cy="210"
            fill="none"
            r="170"
            stroke="#DDDDDD"
            stroke-width="40"
          />
          <circle
            cx="210"
            cy="210"
            fill="none"
            opacity="1"
            r="170"
            stroke="url(#linear)"
            stroke-dasharray="117.49556524425826 950.6459369762714"
            stroke-dashoffset="0px"
            stroke-linecap="round"
            stroke-width="40"
            style="transition: stroke-dashoffset 0.3s ease 0s, stroke-dasharray 0.3s ease 0s, stroke 0.3s ease 0s, stroke-width 0.06s ease 0.3s;"
          />
        </svg>
        <div
          class="sc-jSFkmK kVpwRZ"
          size="100"
        >
          11%
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-eCApGN hJJZDV"
    >
      <svg
        height="100"
        style="transform: rotate(270deg);"
        viewBox="0 0 420 420"
        width="100"
      >
        <defs>
          <radialgradient
            cx="100%"
            cy="100%"
            id="linear"
            r="100%"
            spreadMethod="pad"
          >
            <stop
              offset="0%"
              stop-color="#FF4785"
            />
            <stop
              offset="100%"
              stop-color="#FFAE00"
            />
          </radialgradient>
        </defs>
        <circle
          cx="210"
          cy="210"
          fill="none"
          r="170"
          stroke="#DDDDDD"
          stroke-width="40"
        />
        <circle
          cx="210"
          cy="210"
          fill="none"
          opacity="1"
          r="170"
          stroke="url(#linear)"
          stroke-dasharray="117.49556524425826 950.6459369762714"
          stroke-dashoffset="0px"
          stroke-linecap="round"
          stroke-width="40"
          style="transition: stroke-dashoffset 0.3s ease 0s, stroke-dasharray 0.3s ease 0s, stroke 0.3s ease 0s, stroke-width 0.06s ease 0.3s;"
        />
      </svg>
      <div
        class="sc-jSFkmK kVpwRZ"
        size="100"
      >
        11%
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`test Progress component  should render bycount 5`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-eCApGN hJJZDV"
      >
        <svg
          height="100"
          style="transform: rotate(270deg);"
          viewBox="0 0 420 420"
          width="100"
        >
          <defs>
            <radialgradient
              cx="100%"
              cy="100%"
              id="linear"
              r="100%"
              spreadMethod="pad"
            >
              <stop
                offset="0%"
                stop-color="#FF4785"
              />
              <stop
                offset="100%"
                stop-color="#FFAE00"
              />
            </radialgradient>
          </defs>
          <circle
            cx="210"
            cy="210"
            fill="none"
            r="170"
            stroke="#DDDDDD"
            stroke-width="40"
          />
          <circle
            cx="210"
            cy="210"
            fill="none"
            opacity="1"
            r="170"
            stroke="url(#linear)"
            stroke-dasharray="1068.1415022205297 0"
            stroke-dashoffset="0px"
            stroke-linecap="round"
            stroke-width="40"
            style="transition: stroke-dashoffset 0.3s ease 0s, stroke-dasharray 0.3s ease 0s, stroke 0.3s ease 0s, stroke-width 0.06s ease 0.3s;"
          />
        </svg>
        <div
          class="sc-jSFkmK kVpwRZ"
          size="100"
        >
          100%
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-eCApGN hJJZDV"
    >
      <svg
        height="100"
        style="transform: rotate(270deg);"
        viewBox="0 0 420 420"
        width="100"
      >
        <defs>
          <radialgradient
            cx="100%"
            cy="100%"
            id="linear"
            r="100%"
            spreadMethod="pad"
          >
            <stop
              offset="0%"
              stop-color="#FF4785"
            />
            <stop
              offset="100%"
              stop-color="#FFAE00"
            />
          </radialgradient>
        </defs>
        <circle
          cx="210"
          cy="210"
          fill="none"
          r="170"
          stroke="#DDDDDD"
          stroke-width="40"
        />
        <circle
          cx="210"
          cy="210"
          fill="none"
          opacity="1"
          r="170"
          stroke="url(#linear)"
          stroke-dasharray="1068.1415022205297 0"
          stroke-dashoffset="0px"
          stroke-linecap="round"
          stroke-width="40"
          style="transition: stroke-dashoffset 0.3s ease 0s, stroke-dasharray 0.3s ease 0s, stroke 0.3s ease 0s, stroke-width 0.06s ease 0.3s;"
        />
      </svg>
      <div
        class="sc-jSFkmK kVpwRZ"
        size="100"
      >
        100%
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`test Progress component  should render bycount 6`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-eCApGN hJJZDV"
      >
        <svg
          height="100"
          style="transform: rotate(270deg);"
          viewBox="0 0 420 420"
          width="100"
        >
          <defs>
            <radialgradient
              cx="100%"
              cy="100%"
              id="linear"
              r="100%"
              spreadMethod="pad"
            >
              <stop
                offset="0%"
                stop-color="#FF4785"
              />
              <stop
                offset="100%"
                stop-color="#FFAE00"
              />
            </radialgradient>
          </defs>
          <circle
            cx="210"
            cy="210"
            fill="none"
            r="170"
            stroke="#DDDDDD"
            stroke-width="40"
          />
          <circle
            cx="210"
            cy="210"
            fill="none"
            opacity="0"
            r="170"
            stroke="url(#linear)"
            stroke-dasharray="0 1068.1415022205297"
            stroke-dashoffset="0px"
            stroke-linecap="round"
            stroke-width="40"
            style="transition: stroke-dashoffset 0.3s ease 0s, stroke-dasharray 0.3s ease 0s, stroke 0.3s ease 0s, stroke-width 0.06s ease 0.3s;"
          />
        </svg>
        <div
          class="sc-jSFkmK kVpwRZ"
          size="100"
        >
          0%
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-eCApGN hJJZDV"
    >
      <svg
        height="100"
        style="transform: rotate(270deg);"
        viewBox="0 0 420 420"
        width="100"
      >
        <defs>
          <radialgradient
            cx="100%"
            cy="100%"
            id="linear"
            r="100%"
            spreadMethod="pad"
          >
            <stop
              offset="0%"
              stop-color="#FF4785"
            />
            <stop
              offset="100%"
              stop-color="#FFAE00"
            />
          </radialgradient>
        </defs>
        <circle
          cx="210"
          cy="210"
          fill="none"
          r="170"
          stroke="#DDDDDD"
          stroke-width="40"
        />
        <circle
          cx="210"
          cy="210"
          fill="none"
          opacity="0"
          r="170"
          stroke="url(#linear)"
          stroke-dasharray="0 1068.1415022205297"
          stroke-dashoffset="0px"
          stroke-linecap="round"
          stroke-width="40"
          style="transition: stroke-dashoffset 0.3s ease 0s, stroke-dasharray 0.3s ease 0s, stroke 0.3s ease 0s, stroke-width 0.06s ease 0.3s;"
        />
      </svg>
      <div
        class="sc-jSFkmK kVpwRZ"
        size="100"
      >
        0%
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`test Progress component should change color 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-bdnylx cAsKrJ"
      >
        <div
          class="sc-dlnjPT gYKXEn"
        >
          <div
            class="sc-gtssRu iQWtxS"
          />
        </div>
        <div
          class="sc-hKFyIo hWQnzJ"
        >
          11%
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-bdnylx cAsKrJ"
    >
      <div
        class="sc-dlnjPT gYKXEn"
      >
        <div
          class="sc-gtssRu iQWtxS"
        />
      </div>
      <div
        class="sc-hKFyIo hWQnzJ"
      >
        11%
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`test Progress component should change color 2`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-bdnylx cAsKrJ"
      >
        <div
          class="sc-dlnjPT feUyJt"
        >
          <div
            class="sc-gtssRu dBErOB"
          />
        </div>
        <div
          class="sc-hKFyIo hWQnzJ"
        >
          11%
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-bdnylx cAsKrJ"
    >
      <div
        class="sc-dlnjPT feUyJt"
      >
        <div
          class="sc-gtssRu dBErOB"
        />
      </div>
      <div
        class="sc-hKFyIo hWQnzJ"
      >
        11%
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`test Progress component should change color 3`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-eCApGN hJJZDV"
      >
        <svg
          height="100"
          style="transform: rotate(270deg);"
          viewBox="0 0 420 420"
          width="100"
        >
          <defs>
            <radialgradient
              cx="100%"
              cy="100%"
              id="linear"
              r="100%"
              spreadMethod="pad"
            >
              <stop
                offset="0%"
                stop-color="#FC521F"
              />
              <stop
                offset="100%"
                stop-color="#6F2CAC"
              />
            </radialgradient>
          </defs>
          <circle
            cx="210"
            cy="210"
            fill="none"
            r="170"
            stroke="#2A0481"
            stroke-width="40"
          />
          <circle
            cx="210"
            cy="210"
            fill="none"
            opacity="1"
            r="170"
            stroke="url(#linear)"
            stroke-dasharray="117.49556524425826 950.6459369762714"
            stroke-dashoffset="0px"
            stroke-linecap="round"
            stroke-width="40"
            style="transition: stroke-dashoffset 0.3s ease 0s, stroke-dasharray 0.3s ease 0s, stroke 0.3s ease 0s, stroke-width 0.06s ease 0.3s;"
          />
        </svg>
        <div
          class="sc-jSFkmK kVpwRZ"
          size="100"
        >
          11%
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-eCApGN hJJZDV"
    >
      <svg
        height="100"
        style="transform: rotate(270deg);"
        viewBox="0 0 420 420"
        width="100"
      >
        <defs>
          <radialgradient
            cx="100%"
            cy="100%"
            id="linear"
            r="100%"
            spreadMethod="pad"
          >
            <stop
              offset="0%"
              stop-color="#FC521F"
            />
            <stop
              offset="100%"
              stop-color="#6F2CAC"
            />
          </radialgradient>
        </defs>
        <circle
          cx="210"
          cy="210"
          fill="none"
          r="170"
          stroke="#2A0481"
          stroke-width="40"
        />
        <circle
          cx="210"
          cy="210"
          fill="none"
          opacity="1"
          r="170"
          stroke="url(#linear)"
          stroke-dasharray="117.49556524425826 950.6459369762714"
          stroke-dashoffset="0px"
          stroke-linecap="round"
          stroke-width="40"
          style="transition: stroke-dashoffset 0.3s ease 0s, stroke-dasharray 0.3s ease 0s, stroke 0.3s ease 0s, stroke-width 0.06s ease 0.3s;"
        />
      </svg>
      <div
        class="sc-jSFkmK kVpwRZ"
        size="100"
      >
        11%
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`test Progress component should change color 4`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-eCApGN hJJZDV"
      >
        <svg
          height="100"
          style="transform: rotate(270deg);"
          viewBox="0 0 420 420"
          width="100"
        >
          <defs>
            <radialgradient
              cx="100%"
              cy="100%"
              id="linear"
              r="100%"
              spreadMethod="pad"
            >
              <stop
                offset="0%"
                stop-color="#FF4400"
              />
              <stop
                offset="100%"
                stop-color="#37D5D3"
              />
            </radialgradient>
          </defs>
          <circle
            cx="210"
            cy="210"
            fill="none"
            r="170"
            stroke="#FFAE00"
            stroke-width="40"
          />
          <circle
            cx="210"
            cy="210"
            fill="none"
            opacity="1"
            r="170"
            stroke="url(#linear)"
            stroke-dasharray="117.49556524425826 950.6459369762714"
            stroke-dashoffset="0px"
            stroke-linecap="round"
            stroke-width="40"
            style="transition: stroke-dashoffset 0.3s ease 0s, stroke-dasharray 0.3s ease 0s, stroke 0.3s ease 0s, stroke-width 0.06s ease 0.3s;"
          />
        </svg>
        <div
          class="sc-jSFkmK kVpwRZ"
          size="100"
        >
          11%
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-eCApGN hJJZDV"
    >
      <svg
        height="100"
        style="transform: rotate(270deg);"
        viewBox="0 0 420 420"
        width="100"
      >
        <defs>
          <radialgradient
            cx="100%"
            cy="100%"
            id="linear"
            r="100%"
            spreadMethod="pad"
          >
            <stop
              offset="0%"
              stop-color="#FF4400"
            />
            <stop
              offset="100%"
              stop-color="#37D5D3"
            />
          </radialgradient>
        </defs>
        <circle
          cx="210"
          cy="210"
          fill="none"
          r="170"
          stroke="#FFAE00"
          stroke-width="40"
        />
        <circle
          cx="210"
          cy="210"
          fill="none"
          opacity="1"
          r="170"
          stroke="url(#linear)"
          stroke-dasharray="117.49556524425826 950.6459369762714"
          stroke-dashoffset="0px"
          stroke-linecap="round"
          stroke-width="40"
          style="transition: stroke-dashoffset 0.3s ease 0s, stroke-dasharray 0.3s ease 0s, stroke 0.3s ease 0s, stroke-width 0.06s ease 0.3s;"
        />
      </svg>
      <div
        class="sc-jSFkmK kVpwRZ"
        size="100"
      >
        11%
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`test Progress component should change size 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-bdnylx cAsKrJ"
      >
        <div
          class="sc-dlnjPT ivcwLc"
          height="500"
        >
          <div
            class="sc-gtssRu fuNhiq"
            height="500"
          />
        </div>
        <div
          class="sc-hKFyIo jvxkqQ"
          height="500"
        >
          11%
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-bdnylx cAsKrJ"
    >
      <div
        class="sc-dlnjPT ivcwLc"
        height="500"
      >
        <div
          class="sc-gtssRu fuNhiq"
          height="500"
        />
      </div>
      <div
        class="sc-hKFyIo jvxkqQ"
        height="500"
      >
        11%
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`test Progress component should change size 2`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-eCApGN hJJZDV"
      >
        <svg
          height="400"
          style="transform: rotate(270deg);"
          viewBox="0 0 420 420"
          width="400"
        >
          <defs>
            <radialgradient
              cx="100%"
              cy="100%"
              id="linear"
              r="100%"
              spreadMethod="pad"
            >
              <stop
                offset="0%"
                stop-color="#FF4785"
              />
              <stop
                offset="100%"
                stop-color="#FFAE00"
              />
            </radialgradient>
          </defs>
          <circle
            cx="210"
            cy="210"
            fill="none"
            r="170"
            stroke="#DDDDDD"
            stroke-width="40"
          />
          <circle
            cx="210"
            cy="210"
            fill="none"
            opacity="1"
            r="170"
            stroke="url(#linear)"
            stroke-dasharray="117.49556524425826 950.6459369762714"
            stroke-dashoffset="0px"
            stroke-linecap="round"
            stroke-width="40"
            style="transition: stroke-dashoffset 0.3s ease 0s, stroke-dasharray 0.3s ease 0s, stroke 0.3s ease 0s, stroke-width 0.06s ease 0.3s;"
          />
        </svg>
        <div
          class="sc-jSFkmK eKOqHH"
          size="400"
        >
          11%
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-eCApGN hJJZDV"
    >
      <svg
        height="400"
        style="transform: rotate(270deg);"
        viewBox="0 0 420 420"
        width="400"
      >
        <defs>
          <radialgradient
            cx="100%"
            cy="100%"
            id="linear"
            r="100%"
            spreadMethod="pad"
          >
            <stop
              offset="0%"
              stop-color="#FF4785"
            />
            <stop
              offset="100%"
              stop-color="#FFAE00"
            />
          </radialgradient>
        </defs>
        <circle
          cx="210"
          cy="210"
          fill="none"
          r="170"
          stroke="#DDDDDD"
          stroke-width="40"
        />
        <circle
          cx="210"
          cy="210"
          fill="none"
          opacity="1"
          r="170"
          stroke="url(#linear)"
          stroke-dasharray="117.49556524425826 950.6459369762714"
          stroke-dashoffset="0px"
          stroke-linecap="round"
          stroke-width="40"
          style="transition: stroke-dashoffset 0.3s ease 0s, stroke-dasharray 0.3s ease 0s, stroke 0.3s ease 0s, stroke-width 0.06s ease 0.3s;"
        />
      </svg>
      <div
        class="sc-jSFkmK eKOqHH"
        size="400"
      >
        11%
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
